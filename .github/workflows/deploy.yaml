on:
  workflow_call:
    inputs:
      project-name:
        required: true
        type: string
      microservice-name:
        required: true
        type: string
      enable-grpc:
        required: false
        type: boolean
      enable-rest:
        required: false
        type: boolean
      enable-worker:
        required: false
        type: boolean
      environment:
        required: true
        type: string

env:
  IS_RELEASE: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
  IS_RC: ${{ github.ref == 'refs/heads/rc' }}
  IS_BETA: ${{ github.ref == 'refs/heads/dev' }}

permissions:
  contents: write
  packages: write
  repository-projects: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }} 
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SemVer
        id: git-semver
        uses: codedesignplus/semver-git-version@v0.1.10
        with:
          folder: ${{ github.workspace }}
          release-branch: 'main'
          release-candidate-branch: 'rc'
          beta-branch: 'dev'
          major-identifier: breaking
          minor-identifier: feat
          prefix: v
          dir-affected: ./
          previous-version: true
          new-version: true

      - name: Print Output
        id: output
        run: |
          echo "Previous Tag ${{ steps.git-semver.outputs.previous-tag }}"
          echo "Previous Version ${{ steps.git-semver.outputs.previous-version }}"
          echo "Previous Version Prefix ${{ steps.git-semver.outputs.previous-version-prefix }}"
          echo "New Version ${{ steps.git-semver.outputs.new-version }}"
          echo "New Version Prefix ${{ steps.git-semver.outputs.new-version-prefix }}"

      - uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ vars.AZURE_RESOURCE_GROUP }}
          cluster-name: '${{ vars.AZURE_CLUSTER_NAME }}'
          admin: 'true'
          use-kubelogin: 'true'
      
      - name: Install Helm
        uses: azure/setup-helm@v1

      - name: Create kubeconfig file
        run: echo "${{ secrets.KUBECONFIG }}" > ${{ github.workspace }}/kubeconfig

      - name: Helm - Add repo
        run: helm repo add codedesignplus https://www.codedesignplus.com/helm-charts/

      - name: Helm - Update repo
        run: helm repo update

      - name: Helm - Dependency Update GRPC
        if: ${{ inputs.enable-grpc }}
        run: helm dependency update ./charts/${{ inputs.microservice-name }}-grpc          

      - name: Helm - Deploy GRPC
        if: ${{ inputs.enable-grpc }}
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: helm upgrade --install ${{ inputs.microservice-name }}-grpc ./charts/${{ inputs.microservice-name }}-grpc --namespace ${{ vars.NAMESPACE }} --set image.repository=${{ vars.CONTAINER_REGISTRY }}/${{ inputs.microservice-name }}-grpc --set image.tag=${{ steps.git-semver.outputs.new-version-prefix }}

      - name: Helm - Dependency Update REST
        if: ${{ inputs.enable-rest }}
        run: helm dependency update ./charts/${{ inputs.microservice-name }}-rest
          
      - name: Helm - Deploy REST
        if: ${{ inputs.enable-rest }}
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: helm upgrade --install ${{ inputs.microservice-name }}-rest ./charts/${{ inputs.microservice-name }}-rest --namespace ${{ vars.NAMESPACE }} --set image.repository=${{ vars.CONTAINER_REGISTRY }}/${{ inputs.microservice-name }}-rest --set image.tag=${{ steps.git-semver.outputs.new-version-prefix }}

      - name: Helm - Dependency Update Worker
        if: ${{ inputs.enable-worker }}
        run: helm dependency update ./charts/${{ inputs.microservice-name }}-worker

      - name: Helm - Deploy Worker
        if: ${{ inputs.enable-worker }}
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: helm upgrade --install ${{ inputs.microservice-name }}-worker ./charts/${{ inputs.microservice-name }}-worker --namespace ${{ vars.NAMESPACE }} --set image.repository=${{ vars.CONTAINER_REGISTRY }}/${{ inputs.microservice-name }}-worker --set image.tag=${{ steps.git-semver.outputs.new-version-prefix }}